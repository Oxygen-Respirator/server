# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: ["main"] # master로 PR시 Actions 작동

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle # JAVA 빌드 후 자동으로 TEST 코드를 실행하게 되있으니
        run: ./gradlew build # OMS DB사용시 ip허용이 안돼서 에러날 수 있음 (github 원격서버에서 실행되므로)
        shell: bash # 현 프로젝트는 @SpringBootTest 제거 후 빌드 함.

      # https://github.com/docker/build-push-action
      # docker 시작
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_ID}}
          password: ${{secrets.DOCKER_PW}}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: . # base folder
          file: ./Dockerfile # Dockerfile path
          platforms: linux/amd64 # m1에서는 - linux/arm64/v8
          push: true # github 저장소 명으로 도커 imagename 설정
          tags: ojy9612/${{ github.event.repository.name }}:1.0 # username/imagename:tagname  tagname 생략 시 latest로 입력됨.
